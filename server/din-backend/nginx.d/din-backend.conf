# nginx reverse-proxy snippet for DIN backend
# Place under /etc/nginx/sites-available/din-backend and symlink to sites-enabled

server {
  listen 80;
  server_name neurahear.com www.neurahear.com;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  server_name neurahear.com www.neurahear.com;

  # Update these paths to your Let's Encrypt certs or other TLS certs
  ssl_certificate /etc/letsencrypt/live/neurahear.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/neurahear.com/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # Serve the static front-end for the DIN test at /tools/digit-in-noise-test/
  location ^~ /tools/digit-in-noise-test/ {
    # Adjust the proxy target if your static front-end runs elsewhere
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Proxy all API calls to the backend service
  # Front-end can use /api/... and nginx will forward to the backend
  location /api/ {
    proxy_pass http://127.0.0.1:4000/api/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Support websockets if needed
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  # Optional: add caching, gzip, rate limiting, etc. as needed
}
